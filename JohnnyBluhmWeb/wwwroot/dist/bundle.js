(()=>{"use strict";var t=function(t,e,n,r){return new(n||(n=Promise))((function(o,a){function c(t){try{i(r.next(t))}catch(t){a(t)}}function u(t){try{i(r.throw(t))}catch(t){a(t)}}function i(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(c,u)}i((r=r.apply(t,e||[])).next())}))},e=function(t,e){var n,r,o,a,c={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function u(u){return function(i){return function(u){if(n)throw new TypeError("Generator is already executing.");for(;a&&(a=0,u[0]&&(c=0)),c;)try{if(n=1,r&&(o=2&u[0]?r.return:u[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,u[1])).done)return o;switch(r=0,o&&(u=[2&u[0],o.value]),u[0]){case 0:case 1:o=u;break;case 4:return c.label++,{value:u[1],done:!1};case 5:c.label++,r=u[1],u=[0];continue;case 7:u=c.ops.pop(),c.trys.pop();continue;default:if(!((o=(o=c.trys).length>0&&o[o.length-1])||6!==u[0]&&2!==u[0])){c=0;continue}if(3===u[0]&&(!o||u[1]>o[0]&&u[1]<o[3])){c.label=u[1];break}if(6===u[0]&&c.label<o[1]){c.label=o[1],o=u;break}if(o&&c.label<o[2]){c.label=o[2],c.ops.push(u);break}o[2]&&c.ops.pop(),c.trys.pop();continue}u=e.call(t,c)}catch(t){u=[6,t],r=0}finally{n=o=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,i])}}},n=function(){function n(){}return n.prototype.getPowerData=function(){return t(this,void 0,void 0,(function(){return e(this,(function(t){switch(t.label){case 0:return[4,fetch("https://localhost:7038/api/stravaMongo/GetAllPowerStreams")];case 1:return[4,t.sent().json()];case 2:return[2,t.sent()]}}))}))},n.prototype.getHeartRateData=function(){return t(this,void 0,void 0,(function(){return e(this,(function(t){switch(t.label){case 0:return[4,fetch("https://localhost:7038/api/stravaMongo/GetAllHrStreams")];case 1:return[4,t.sent().json()];case 2:return[2,t.sent()]}}))}))},n}(),r=function(t,e,n,r){return new(n||(n=Promise))((function(o,a){function c(t){try{i(r.next(t))}catch(t){a(t)}}function u(t){try{i(r.throw(t))}catch(t){a(t)}}function i(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(c,u)}i((r=r.apply(t,e||[])).next())}))},o=function(t,e){var n,r,o,a,c={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function u(u){return function(i){return function(u){if(n)throw new TypeError("Generator is already executing.");for(;a&&(a=0,u[0]&&(c=0)),c;)try{if(n=1,r&&(o=2&u[0]?r.return:u[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,u[1])).done)return o;switch(r=0,o&&(u=[2&u[0],o.value]),u[0]){case 0:case 1:o=u;break;case 4:return c.label++,{value:u[1],done:!1};case 5:c.label++,r=u[1],u=[0];continue;case 7:u=c.ops.pop(),c.trys.pop();continue;default:if(!((o=(o=c.trys).length>0&&o[o.length-1])||6!==u[0]&&2!==u[0])){c=0;continue}if(3===u[0]&&(!o||u[1]>o[0]&&u[1]<o[3])){c.label=u[1];break}if(6===u[0]&&c.label<o[1]){c.label=o[1],o=u;break}if(o&&c.label<o[2]){c.label=o[2],c.ops.push(u);break}o[2]&&c.ops.pop(),c.trys.pop();continue}u=e.call(t,c)}catch(t){u=[6,t],r=0}finally{n=o=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,i])}}};function a(){return r(this,void 0,void 0,(function(){var t,e,r;return o(this,(function(o){switch(o.label){case 0:return document.getElementById("switch"),[4,(t=new n).getPowerData()];case 1:return e=o.sent(),[4,t.getHeartRateData()];case 2:return r=o.sent(),console.log(r),console.log(e),console.log(r[0].heartRateDict),console.log(r[0].powerDict),[2]}}))}))}r(void 0,void 0,void 0,(function(){var t;return o(this,(function(e){switch(e.label){case 0:return e.trys.push([0,2,,3]),[4,a()];case 1:return e.sent(),[3,3];case 2:return t=e.sent(),console.error(t),[3,3];case 3:return[2]}}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJ5M0NBSUEsYUFDSSxhQUVBLENBZ0JKLE9BZlUsWUFBQUEsYUFBTixXLDBGQUdpQixTQUFNQyxNQUZULDhELE9BR0MsU0FERSxTQUNXQyxRLE9BQ3hCLE1BQU8sQ0FBUCxFQURXLFUsUUFJVCxZQUFBQyxpQkFBTixXLDBGQUdpQixTQUFNRixNQUZULDJELE9BR0MsU0FERSxTQUNXQyxRLE9BQ3hCLE1BQU8sQ0FBUCxFQURXLFUsUUFHbkIsRUFuQkEsRyxrMkNDSUEsU0FBZUUsSSxvR0FLUSxPQUpOQyxTQUFTQyxlQUFlLFVBSWxCLElBRmZDLEVBQVMsSUFBSUMsR0FFZVIsZ0IsT0FDaEIsT0FEWlMsRUFBZSxTQUNILEdBQU1GLEVBQU9KLG9CLGNBQXpCTyxFQUFZLFNBR2hCQyxRQUFRQyxJQUFJRixHQUNaQyxRQUFRQyxJQUFJSCxHQUNaRSxRQUFRQyxJQUFJRixFQUFVLEdBQUdHLGVBQ3pCRixRQUFRQyxJQUFJRixFQUFVLEdBQUdJLFcsV0FvRzVCLG1DLHdEQUVPLE8sc0JBQUEsR0FBTVYsSyxjQUFOLFMsK0JBRUFPLFFBQVFJLE1BQU0sRyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0cmF2YS8uL3NyYy9hcGlDbGllbnQudHMiLCJ3ZWJwYWNrOi8vc3RyYXZhLy4vc3JjL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0cmVhbSB9IGZyb20gXCIuL21vZGVscy9zdHJlYW1cIjtcclxuaW1wb3J0IHsgSGVhcnRSYXRlU3RyZWFtIH0gZnJvbSBcIi4vbW9kZWxzL2hlYXJ0UmF0ZVN0cmVhbVwiO1xyXG5pbXBvcnQgeyBQb3dlclN0cmVhbSB9IGZyb20gXCIuL21vZGVscy9wb3dlclN0cmVhbVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFN0cmF2YUFwaUNsaWVudCB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuXHJcbiAgICB9XHJcbiAgICBhc3luYyBnZXRQb3dlckRhdGEoKTogUHJvbWlzZTxTdHJlYW1bXT4ge1xyXG4gICAgICAgIHZhciB1cmwgPSBcImh0dHBzOi8vbG9jYWxob3N0OjcwMzgvYXBpL3N0cmF2YU1vbmdvL0dldEFsbFBvd2VyU3RyZWFtc1wiO1xyXG5cclxuICAgICAgICB2YXIgcmVzdWx0ID0gYXdhaXQgZmV0Y2godXJsKTtcclxuICAgICAgICB2YXIgZGF0YSA9IGF3YWl0IHJlc3VsdC5qc29uKCkgYXMgU3RyZWFtW107XHJcbiAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgZ2V0SGVhcnRSYXRlRGF0YSgpOiBQcm9taXNlPFN0cmVhbVtdPiB7XHJcbiAgICAgICAgdmFyIHVybCA9IFwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzAzOC9hcGkvc3RyYXZhTW9uZ28vR2V0QWxsSHJTdHJlYW1zXCI7XHJcblxyXG4gICAgICAgIHZhciByZXN1bHQgPSBhd2FpdCBmZXRjaCh1cmwpO1xyXG4gICAgICAgIHZhciBkYXRhID0gYXdhaXQgcmVzdWx0Lmpzb24oKSBhcyBTdHJlYW1bXTtcclxuICAgICAgICByZXR1cm4gZGF0YTtcclxuICAgIH1cclxufSIsImltcG9ydCB7IFBvd2VyU3RyZWFtIH0gZnJvbSBcIi4vbW9kZWxzL3Bvd2VyU3RyZWFtXCI7XHJcbmltcG9ydCB7IFN0cmF2YUFwaUNsaWVudCB9IGZyb20gXCIuL2FwaUNsaWVudFwiO1xyXG5pbXBvcnQgeyBDaGFydEdlbmVyYXRvciB9IGZyb20gXCIuL2NoYXJ0R2VuZXJhdG9yXCI7XHJcbmltcG9ydCB7IEhlYXJ0UmF0ZVN0cmVhbSB9IGZyb20gXCIuL21vZGVscy9oZWFydFJhdGVTdHJlYW1cIjtcclxuaW1wb3J0IHsgUG93ZXJDaGFydEdlbmVyYXRvciB9IGZyb20gXCIuL3Bvd2VyQ2hhcnRHZW5lcmF0b3JcIjtcclxuXHJcbmxldCBjaGFydEdlbmVyYXRvcjogQ2hhcnRHZW5lcmF0b3I7XHJcblxyXG5hc3luYyBmdW5jdGlvbiBtYWluKCkge1xyXG4gICAgbGV0IGJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3dpdGNoXCIpIGFzIEhUTUxCdXR0b25FbGVtZW50O1xyXG4gICAgXHJcbiAgICBsZXQgY2xpZW50ID0gbmV3IFN0cmF2YUFwaUNsaWVudCgpO1xyXG4gICAgXHJcbiAgICB2YXIgcG93ZXJTdHJlYW1zID0gYXdhaXQgY2xpZW50LmdldFBvd2VyRGF0YSgpO1xyXG4gICAgdmFyIGhyU3RyZWFtcyA9IGF3YWl0IGNsaWVudC5nZXRIZWFydFJhdGVEYXRhKCk7XHJcblxyXG4gICAgXHJcbiAgICBjb25zb2xlLmxvZyhoclN0cmVhbXMpO1xyXG4gICAgY29uc29sZS5sb2cocG93ZXJTdHJlYW1zKTtcclxuICAgIGNvbnNvbGUubG9nKGhyU3RyZWFtc1swXS5oZWFydFJhdGVEaWN0KTtcclxuICAgIGNvbnNvbGUubG9nKGhyU3RyZWFtc1swXS5wb3dlckRpY3QpO1xyXG5cclxuICAgIC8vdmFyIGhyVGltZSA9IEdldFRpbWVJblpvbmVMaXN0SFIoaHJTdHJlYW1zKTtcclxuICAgIC8vY29uc29sZS5sb2coaHJUaW1lKTtcclxuICAgIC8vdmFyIHRpbWVJblpvbmVMaXN0ID0gR2V0VGltZUluWm9uZUxpc3QocG93ZXJTdHJlYW1zKTtcclxuICAgIC8vY2hhcnRHZW5lcmF0b3IgPSBuZXcgUG93ZXJDaGFydEdlbmVyYXRvcih0aW1lSW5ab25lTGlzdCk7XHJcbiAgICAvL2NoYXJ0R2VuZXJhdG9yLmNyZWF0ZUhvdXJzQ2hhcnQoKTtcclxuICAgIC8vYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBjaGFydEdlbmVyYXRvci50b2dnbGVUaW1lVW5pdHMoKSlcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0Wm9uZShwb3dlcjogc3RyaW5nKSA6IG51bWJlcntcclxuICAgIHZhciBwb3dlckFzTnVtYmVyID0gTnVtYmVyLnBhcnNlSW50KHBvd2VyKTtcclxuICAgIGlmIChwb3dlckFzTnVtYmVyIDw9IDEzMikge1xyXG4gICAgICAgIHJldHVybiAxO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAocG93ZXJBc051bWJlciA+IDEzMiAmJiBwb3dlckFzTnVtYmVyIDw9IDE4MCkge1xyXG4gICAgICAgIHJldHVybiAyO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAocG93ZXJBc051bWJlciA+IDE4MCAmJiBwb3dlckFzTnVtYmVyIDw9IDIxNikge1xyXG4gICAgICAgIHJldHVybiAzO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAocG93ZXJBc051bWJlciA+IDIxNiAmJiBwb3dlckFzTnVtYmVyIDw9IDI1Mikge1xyXG4gICAgICAgIHJldHVybiA0O1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAocG93ZXJBc051bWJlciA+IDI1MiAmJiBwb3dlckFzTnVtYmVyIDw9IDI4OCkge1xyXG4gICAgICAgIHJldHVybiA1O1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAocG93ZXJBc051bWJlciA+IDI4OCAmJiBwb3dlckFzTnVtYmVyIDw9IDM2MCkge1xyXG4gICAgICAgIHJldHVybiA2O1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAocG93ZXJBc051bWJlciA+PSAzNjApIHtcclxuICAgICAgICByZXR1cm4gNztcclxuICAgIH1cclxuICAgIHJldHVybiAxO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRIclpvbmUocG93ZXI6IHN0cmluZyk6IG51bWJlciB7XHJcbiAgICB2YXIgcG93ZXJBc051bWJlciA9IE51bWJlci5wYXJzZUludChwb3dlcik7XHJcbiAgICBpZiAocG93ZXJBc051bWJlciA8PSAxMTgpIHtcclxuICAgICAgICByZXR1cm4gMTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKHBvd2VyQXNOdW1iZXIgPiAxMTggJiYgcG93ZXJBc051bWJlciA8PSAxNTYpIHtcclxuICAgICAgICByZXR1cm4gMjtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKHBvd2VyQXNOdW1iZXIgPiAxNTYgJiYgcG93ZXJBc051bWJlciA8PSAxNzUpIHtcclxuICAgICAgICByZXR1cm4gMztcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKHBvd2VyQXNOdW1iZXIgPiAxNzUgJiYgcG93ZXJBc051bWJlciA8PSAxOTQpIHtcclxuICAgICAgICByZXR1cm4gNDtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKHBvd2VyQXNOdW1iZXIgPiAxOTQpIHtcclxuICAgICAgICByZXR1cm4gNTtcclxuICAgIH1cclxuICAgIHJldHVybiAxO1xyXG59XHJcblxyXG5mdW5jdGlvbiBHZXRUaW1lSW5ab25lTGlzdChwb3dlclN0cmVhbXM6IFBvd2VyU3RyZWFtW10pOiBudW1iZXJbXSB7XHJcbiAgICBsZXQgdGltZUluWm9uZURpY3Q6IHsgW2luZGV4OiBzdHJpbmddOiBudW1iZXIgfSA9IHtcclxuICAgICAgICBcIjFcIjogMCxcclxuICAgICAgICBcIjJcIjogMCxcclxuICAgICAgICBcIjNcIjogMCxcclxuICAgICAgICBcIjRcIjogMCxcclxuICAgICAgICBcIjVcIjogMCxcclxuICAgICAgICBcIjZcIjogMCxcclxuICAgICAgICBcIjdcIjogMCxcclxuICAgIH07XHJcblxyXG4gICAgZm9yICh2YXIgcG93ZXJTdHJlYW0gb2YgcG93ZXJTdHJlYW1zKSB7XHJcbiAgICAgICAgZm9yIChsZXQga2V5IGluIHBvd2VyU3RyZWFtLnBvd2VyRGljdCkge1xyXG4gICAgICAgICAgICBsZXQgdGltZUF0UG93ZXJJblNlY29uZHMgPSBwb3dlclN0cmVhbS5wb3dlckRpY3Rba2V5XTtcclxuICAgICAgICAgICAgbGV0IHpvbmUgPSBnZXRab25lKGtleSk7XHJcbiAgICAgICAgICAgIGxldCB6b25lU3RyaW5nID0gem9uZS50b1N0cmluZygpIGFzIHN0cmluZztcclxuICAgICAgICAgICAgdGltZUluWm9uZURpY3Rbem9uZVN0cmluZ10gKz0gTnVtYmVyLnBhcnNlSW50KHRpbWVBdFBvd2VySW5TZWNvbmRzKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIE9iamVjdC52YWx1ZXModGltZUluWm9uZURpY3QpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBHZXRUaW1lSW5ab25lTGlzdEhSKHBvd2VyU3RyZWFtczogSGVhcnRSYXRlU3RyZWFtW10pOiBudW1iZXJbXSB7XHJcbiAgICBsZXQgdGltZUluWm9uZURpY3Q6IHsgW2luZGV4OiBzdHJpbmddOiBudW1iZXIgfSA9IHtcclxuICAgICAgICBcIjFcIjogMCxcclxuICAgICAgICBcIjJcIjogMCxcclxuICAgICAgICBcIjNcIjogMCxcclxuICAgICAgICBcIjRcIjogMCxcclxuICAgICAgICBcIjVcIjogMFxyXG4gICAgfTtcclxuXHJcbiAgICBmb3IgKHZhciBwb3dlclN0cmVhbSBvZiBwb3dlclN0cmVhbXMpIHtcclxuICAgICAgICBmb3IgKGxldCBrZXkgaW4gcG93ZXJTdHJlYW0uaGVhcnRSYXRlRGljdCkge1xyXG4gICAgICAgICAgICBsZXQgdGltZUF0UG93ZXJJblNlY29uZHMgPSBwb3dlclN0cmVhbS5oZWFydFJhdGVEaWN0W2tleV07XHJcbiAgICAgICAgICAgIGxldCB6b25lID0gZ2V0SHJab25lKGtleSk7XHJcbiAgICAgICAgICAgIGxldCB6b25lU3RyaW5nID0gem9uZS50b1N0cmluZygpIGFzIHN0cmluZztcclxuICAgICAgICAgICAgdGltZUluWm9uZURpY3Rbem9uZVN0cmluZ10gKz0gTnVtYmVyLnBhcnNlSW50KHRpbWVBdFBvd2VySW5TZWNvbmRzKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIE9iamVjdC52YWx1ZXModGltZUluWm9uZURpY3QpO1xyXG59XHJcblxyXG4oYXN5bmMgKCkgPT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBhd2FpdCBtYWluKCk7XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihlKTtcclxuICAgIH1cclxufSkoKTtcclxuIl0sIm5hbWVzIjpbImdldFBvd2VyRGF0YSIsImZldGNoIiwianNvbiIsImdldEhlYXJ0UmF0ZURhdGEiLCJtYWluIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImNsaWVudCIsIlN0cmF2YUFwaUNsaWVudCIsInBvd2VyU3RyZWFtcyIsImhyU3RyZWFtcyIsImNvbnNvbGUiLCJsb2ciLCJoZWFydFJhdGVEaWN0IiwicG93ZXJEaWN0IiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9